/*
 * termprint.rub
 *
 * Library of rules for generating printing methods for terms.
 *
 * This library understands (example)
 *
 * term_default_print(RBPair,"[","|","]").
 *
 */

package_import_(?termpackage,"java.io.*") :- 
   term_package(?termpackage).

public_(method<?c,print,[PrintStream]>) :- term_abstract_class(?c,?).
abstract_(method<?c,print,[PrintStream]>) :- term_abstract_class(?c,?).
method_(?c,void,print,[PrintStream],[ostr]) :- term_abstract_class(?c,?).

term_class_default_print(?class,?lt,?sep,?rt) :-
  term_default_print(?s,?lt,?sep,?rt),
  term_class_for(?s,?class).

public_(method<?c,print,[PrintStream]>) :- term_class_default_print(?c,?lt,?sep,?rt).
method_(?c,void,print,[PrintStream],[ostr],{ 
        ostr.print("?lt"); ?printparts
        ostr.print("?rt");})
    :- term_class_default_print(?c,?lt,?sep,?rt),
       term_composite_class(?c,?parts),
       term_print_parts<?lt,?sep,?rt>(?parts,?printparts).

term_print_parts<?lt,?sep,?rt>([],{}).
term_print_parts<?lt,?sep,?rt>([[?T1,?n1],[?T2,?n2]|?r],{
          ?n1.print(ostr); 
        ostr.print("?sep"); ?printrest})
     :- term_print_parts<?lt,?sep,?rt>([[?T2,?n2]|?r],?printrest).

public_(method<?c,print,[PrintStream]>) 
     :- term_terminal_class(?c,?T).
method_(?c,void,print,[PrintStream],[ostr],{ 
        ostr.print(value.toString());})
     :- term_terminal_class(?c,?T).
        
term_list_print_class(?PairC,?NilC,?lt,?sep1,?sep2,?rt) :-
   term_list_print(?Pair,?Nil,?lt,?sep1,?sep2,?rt),
   term_class_for(?Pair,?PairC),
   term_class_for(?Nil,?NilC).

public_(method<?PairC,print,[PrintStream]>)
      :- term_list_print_class(?PairC,?NilC,?lt,?sep,?sep2,?rt).
method_(?PairC,void,print,[PrintStream],[ostr],{ 
        ostr.print("?lt"); 
        printAsList(ostr);
        ostr.print("?rt");})
      :- term_list_print_class(?PairC,?NilC,?lt,?sep,?sep2,?rt).

method_(?PairC,void,printAsList,[PrintStream],[ostr],{
        ?car.print(ostr);        
        if (?cdr==?NilC.the) return;
        if (?cdr.getClass()==this.getClass()) {
            ostr.print("?sep");
            ((?PairC)?cdr).printAsList(ostr);
        }
        else {
            ostr.print("?sep2");
            ?cdr.print(ostr);
        }}) 
      :- term_list_print_class(?PairC,?NilC,?lt,?sep,?sep2,?rt),
         term_composite_class(?PairC,[[?,?car],[?,?cdr]]).

public_(method<?NilC,print,[PrintStream]>)
      :- term_list_print_class(?PairC,?NilC,?lt,?sep,?sep2,?rt).
method_(?NilC,void,print,[PrintStream],[ostr],{
        ostr.print("?lt?rt");})
      :- term_list_print_class(?PairC,?NilC,?lt,?sep,?sep2,?rt).
